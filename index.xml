<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rico&#39;s Blog</title>
    <link>https://raravena80.github.io/</link>
    <description>Recent content on Rico&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>raravena80@gmail.com (Ricardo Aravena)</managingEditor>
    <webMaster>raravena80@gmail.com (Ricardo Aravena)</webMaster>
    <lastBuildDate>Fri, 28 Apr 2017 16:28:29 +0000</lastBuildDate>
    
	<atom:link href="https://raravena80.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Parsing Deeply Nested JSON in Go</title>
      <link>https://raravena80.github.io/post/parsing-nested-json-in-go/</link>
      <pubDate>Fri, 28 Apr 2017 16:28:29 +0000</pubDate>
      <author>raravena80@gmail.com (Ricardo Aravena)</author>
      <guid>https://raravena80.github.io/post/parsing-nested-json-in-go/</guid>
      <description>Parsing deeply nested json in Go is a bit challenging due to the fact that the language doesn&amp;rsquo;t provide many helpers to do so. If you do that in Ruby or Python it&amp;rsquo;s pretty straight forward running some like this in Python j = json.load(jsonstring) or in Ruby j = JSON.load(jsonstring).
In go generally you have to prefine your structs and run through an Unmarshal function which means that most of the times you need to know ahead of time what the nest level and structure of your target json is to parse it.</description>
    </item>
    
    <item>
      <title>CloudNativeCon KubeCon Europe</title>
      <link>https://raravena80.github.io/post/cloudnativecon-kubecon-europe/</link>
      <pubDate>Tue, 25 Apr 2017 16:28:29 +0000</pubDate>
      <author>raravena80@gmail.com (Ricardo Aravena)</author>
      <guid>https://raravena80.github.io/post/cloudnativecon-kubecon-europe/</guid>
      <description>This same blog entry is here. Thanks to the cncf folks who helped me put this together.
Iâ€™ve attended many conferences before, but I was happy to get the diversity scholarship to attend CloudNativeCon + KubeCon Europe 2017 in Berlin as there is always so much more to learn. It was my first time attending an event organized by the Linux Foundation, and I hope to attend more in the future.</description>
    </item>
    
    <item>
      <title>About Rico</title>
      <link>https://raravena80.github.io/page/about/</link>
      <pubDate>Tue, 25 Apr 2017 00:00:00 +0000</pubDate>
      <author>raravena80@gmail.com (Ricardo Aravena)</author>
      <guid>https://raravena80.github.io/page/about/</guid>
      <description></description>
    </item>
    
    <item>
      <title>LXC Playing</title>
      <link>https://raravena80.github.io/post/lxc-playing/</link>
      <pubDate>Sat, 29 Oct 2016 16:28:29 +0000</pubDate>
      <author>raravena80@gmail.com (Ricardo Aravena)</author>
      <guid>https://raravena80.github.io/post/lxc-playing/</guid>
      <description>Over the last couple of years Docker has seen incredible growth across the tech industry. Its use ties together with deployment of Microservices in most Cloud based companies. Docker is easy to use and its in constant development. In the last month I decided to venture and try something different that has been around even before Docker but in a more primitive form. You see containers have been around before Docker for a long time and even before that with the introduction of chroot in 1979.</description>
    </item>
    
    <item>
      <title>Docker First Impressions</title>
      <link>https://raravena80.github.io/post/docker-first-impressions/</link>
      <pubDate>Fri, 07 Mar 2014 16:28:29 +0000</pubDate>
      <author>raravena80@gmail.com (Ricardo Aravena)</author>
      <guid>https://raravena80.github.io/post/docker-first-impressions/</guid>
      <description>For the last few days I&amp;rsquo;ve been taking at crack at using the recent Docker container deployment tool that I&amp;rsquo;ve been hearing a lot buzz about. In essence, it&amp;rsquo;s a wrapper on top of Linux LXC containers, writen in the new friendly and not so popular yet Go language developed at Google.
Just a little bit of background, for those of you not familiar with LXC containers, they are pretty much defined as chroot on steroids.</description>
    </item>
    
    <item>
      <title>Ansible Playbook for PaperTrail on Ubuntu</title>
      <link>https://raravena80.github.io/post/ansible-playbook-for-papertrail-on-ubuntu/</link>
      <pubDate>Tue, 29 Oct 2013 11:54:00 +0000</pubDate>
      <author>raravena80@gmail.com (Ricardo Aravena)</author>
      <guid>https://raravena80.github.io/post/ansible-playbook-for-papertrail-on-ubuntu/</guid>
      <description>This posts describes how to create a simple Ansible task on how to setup PaperTrail on Ubuntu.
It&amp;rsquo;s a follow up to a previous blog describing an Ansible Playbook to setup an HAProxy system. This Ansible task can be included in the HAProxy playbook as well as any other playbooks with something like this:
--- PLAYBOOK: Install papertrail on Ubuntu --- - name: scout hosts: all user: &amp;lt;user-with-sudo&amp;gt; sudo: True tasks: - include: tasks/papertrail.</description>
    </item>
    
    <item>
      <title>Simple Clouformation With Multiple AWS Accounts</title>
      <link>https://raravena80.github.io/post/simple-clouformation-with-multiple-aws-accounts/</link>
      <pubDate>Thu, 24 Oct 2013 16:28:29 +0000</pubDate>
      <author>raravena80@gmail.com (Ricardo Aravena)</author>
      <guid>https://raravena80.github.io/post/simple-clouformation-with-multiple-aws-accounts/</guid>
      <description>In this post I&amp;rsquo;ll describe how to create a simple AWS CloudFormation template so that we can deploy stack using multiple AWS accounts. In other words a common JSON CloudFormation template that can be use to bring up a stack in multiple accounts. The way we are able to do this is by having exact copies of the EC2 AMIs on all the accounts and regions where we are deploying our stack.</description>
    </item>
    
    <item>
      <title>Ansible Playbook for Scout on Ubuntu</title>
      <link>https://raravena80.github.io/post/ansible-playbook-for-scout-on-ubuntu/</link>
      <pubDate>Tue, 22 Oct 2013 00:00:00 +0000</pubDate>
      <author>raravena80@gmail.com (Ricardo Aravena)</author>
      <guid>https://raravena80.github.io/post/ansible-playbook-for-scout-on-ubuntu/</guid>
      <description>This is a sample Ansible task (http://www.ansibleworks.com) on how to setup Scout (https://www.scoutapp.com) on Ubuntu. It needs to be included in an ansible playbook.
It&amp;rsquo;s a follow up to a previous blog describing an Ansible Playbook to setup an HAProxy system. This Ansible task can be included in the HAProxy playbook as well as any other playbooks with something like this:
--- PLAYBOOK: Install scout on Ubuntu --- - name: scout hosts: all user: user-with-sudo sudo: True vars: scout_key: YourScoutAPIKeyFromTheirWebsite tasks: - include: tasks/scout.</description>
    </item>
    
    <item>
      <title>Upgrade Linux Kernel on Chromebook</title>
      <link>https://raravena80.github.io/post/upgrade-linux-kernel-on-chromebook/</link>
      <pubDate>Mon, 21 Oct 2013 22:15:00 +0000</pubDate>
      <author>raravena80@gmail.com (Ricardo Aravena)</author>
      <guid>https://raravena80.github.io/post/upgrade-linux-kernel-on-chromebook/</guid>
      <description>So after installing ChrUbuntu on my Acer C7 Chromebook, I&amp;rsquo;m very pleased that with the help of this blog I was able to upgrade the Linux Kernel to 3.8.11
raravena@chromebook:~/git/blog-src$ uname -a Linux chromebook 3.8.11 #3 SMP Thu Oct 17 07:41:20 PDT 2013 x86_64 x86_64 x86_64 GNU/Linux  These are the modified steps:
#!/bin/bash set -x # # Grab verified boot utilities from ChromeOS. # mkdir -p /usr/share/vboot mount -o ro /dev/sda3 /mnt cp /mnt/usr/bin/vbutil_* /usr/bin mkdir -p /usr/bin/old_bins cp /mnt/usr/bin/old_bins/vbutil_* /usr/bin/old_bins/.</description>
    </item>
    
    <item>
      <title>How To Create an Ansible Playbook to Configure HAProxy</title>
      <link>https://raravena80.github.io/post/how-to-create-an-ansible-playbook-to-configure-haproxy/</link>
      <pubDate>Mon, 21 Oct 2013 00:00:00 +0000</pubDate>
      <author>raravena80@gmail.com (Ricardo Aravena)</author>
      <guid>https://raravena80.github.io/post/how-to-create-an-ansible-playbook-to-configure-haproxy/</guid>
      <description>This is the continuation for Setup a simple HAproxy config
It explains how to create an Ansible playbook to automate the haproxy configuration.
If you&amp;rsquo;d like to find out more about Ansible you can read up on it on their website: http://www.ansible.com
--- # Set up and configure an HaProxy server (Ubuntu flavor) - name: haproxy hosts: all user: userwithsudoaccess sudo: True tags: haproxy vars_files: - &amp;quot;vars/main.yml&amp;quot; tasks: # haproxy package for Ubuntu - include: tasks/haproxy-apt.</description>
    </item>
    
    <item>
      <title>Setup a Simple HAProxy Config</title>
      <link>https://raravena80.github.io/post/setup-a-simple-haproxy-config/</link>
      <pubDate>Mon, 21 Oct 2013 00:00:00 +0000</pubDate>
      <author>raravena80@gmail.com (Ricardo Aravena)</author>
      <guid>https://raravena80.github.io/post/setup-a-simple-haproxy-config/</guid>
      <description>Here&amp;rsquo;s simple haproxy configuration to get you started, you probably want to stick this under /etc/haproxy/haproxy.cfg
global log 127.0.0.1	local0 log 127.0.0.1	local1 notice maxconn 4096 user haproxy group haproxy daemon defaults log	global mode	http option	httplog option	dontlognull retries	3 option redispatch maxconn	4096 contimeout	5000 clitimeout	50000 srvtimeout	50000 stats enable stats auth	admin:password stats uri	/monitor stats refresh	5s option httpchk	GET /status retries	5 option redispatch errorfile	503	/etc/haproxy/errors/503.</description>
    </item>
    
  </channel>
</rss>